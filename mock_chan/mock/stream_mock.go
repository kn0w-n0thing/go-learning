// Code generated by MockGen. DO NOT EDIT.
// Source: ./stream.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDataStreamer is a mock of DataStreamer interface.
type MockDataStreamer struct {
	ctrl     *gomock.Controller
	recorder *MockDataStreamerMockRecorder
}

// MockDataStreamerMockRecorder is the mock recorder for MockDataStreamer.
type MockDataStreamerMockRecorder struct {
	mock *MockDataStreamer
}

// NewMockDataStreamer creates a new mock instance.
func NewMockDataStreamer(ctrl *gomock.Controller) *MockDataStreamer {
	mock := &MockDataStreamer{ctrl: ctrl}
	mock.recorder = &MockDataStreamerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDataStreamer) EXPECT() *MockDataStreamerMockRecorder {
	return m.recorder
}

// DataStream mocks base method.
func (m *MockDataStreamer) DataStream() chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DataStream")
	ret0, _ := ret[0].(chan int)
	return ret0
}

// DataStream indicates an expected call of DataStream.
func (mr *MockDataStreamerMockRecorder) DataStream() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DataStream", reflect.TypeOf((*MockDataStreamer)(nil).DataStream))
}
